@model TravelExpertsWebApplication.Models.CustomerRegistrationData

@{
    /* Author: Robbie Nielsen */
    ViewBag.Title = "Register an Account";
}

<h2>@ViewBag.Title</h2>
<p>* Indicates a required field</p>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "Error: Please check all fields", new { @class = "text-danger" })
        <div class="form-group">
            *@Html.LabelFor(model => model.CustFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustProv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustProv,
                    Model.Provinces,
                    "- Select a Province -",
                    new { @class = "form-control btn btn-light btn-md dropdown-toggle dropdown-toggle-split" })
                <!-- Html.EditorFor(model => model.CustProv, new { htmlAttributes = new { class = "form-control" } }) -->
                @Html.ValidationMessageFor(model => model.CustProv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustPostal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustPostal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustPostal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustCountry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustCountry,
                    Model.Countries,
                    new {  @class = "form-control btn btn-light btn-sm dropdown-toggle dropdown-toggle-split" })
                <!-- Html.EditorFor(model => model.CustCountry, new { htmlAttributes = new { class = "form-control" } }) -->
                @Html.ValidationMessageFor(model => model.CustCountry, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.CustHomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustHomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustHomePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustBusPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustBusPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustBusPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustEmail, "", new { @class = "text-danger" })
                @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Agent ID - should be able to delete, but just commenting out for now -->
        <!--
        <div class="form-group">
            @Html.LabelFor(model => model.AgentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AgentId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AgentId, "", new { @class = "text-danger" })
            </div>
        </div>-->

        <div class="form-group">
            *@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                @Html.ValidationMessage("UsernameExist", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            *@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Return to Home Page", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
